package com.demo.feeder.repository;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;

import com.demo.feeder.entity.DailyTransaction;

public interface DailyTransactionRepository
		extends JpaRepository<DailyTransaction, Long> {

	@Query(value = "SELECT CLIENT_TYPE, CLIENT_NUMBER, ACCOUNT_NUMBER, ACCOUNT_SUBNUMBER,  EXCHANGE_CODE, PRODUCT_GROUP_CODE, SYMBOL, EXPIRATION_DATE, SUM(TOTAL_TRANSACTION_AMOUNT) "
			+ "FROM "
			+ "(SELECT  d.CLIENT_TYPE, d.CLIENT_NUMBER, d.ACCOUNT_NUMBER, d.ACCOUNT_SUBNUMBER,  d.EXCHANGE_CODE, d.PRODUCT_GROUP_CODE, d.SYMBOL, d.EXPIRATION_DATE, d.TRANSACTION_LONG, d.TRANSACTION_SHORT, Sum(TRANSACTION_LONG) AS TOTAL_TRANSACTION_LONG, Sum(TRANSACTION_SHORT) AS TOTAL_TRANSACTION_SHORT,  (Sum(TRANSACTION_LONG) - Sum(TRANSACTION_SHORT) ) AS TOTAL_TRANSACTION_AMOUNT "
			+ "from DAILY_TRANSACTION d  "
			+ "GROUP BY d.CLIENT_TYPE, d.CLIENT_NUMBER, d.ACCOUNT_NUMBER, d.ACCOUNT_SUBNUMBER,  d.EXCHANGE_CODE, d.PRODUCT_GROUP_CODE, d.SYMBOL, d.EXPIRATION_DATE, d.TRANSACTION_LONG, d.TRANSACTION_SHORT) "
			+ "AS A "
			+ "GROUP BY CLIENT_TYPE, CLIENT_NUMBER, ACCOUNT_NUMBER, ACCOUNT_SUBNUMBER,  EXCHANGE_CODE, PRODUCT_GROUP_CODE, SYMBOL, EXPIRATION_DATE", nativeQuery = true)
	public String[][] getDailySummaryReport();

}
